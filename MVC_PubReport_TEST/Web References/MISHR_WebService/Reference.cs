//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace MVC_PubReport.MISHR_WebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="OAServiceSoap", Namespace="http://tempuri.org/")]
    public partial class OAService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CheckDomainUserLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDomainUserNameLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeesDataByEmployeesIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeesDataByEmployeesIDAndSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeDataByEmployeeIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeDataByEmployeeIDAndSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeDataByCardNoAndSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChineseNameByEmployeeIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChineseNameByEmployeeIDAndSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckEmployeeIDIsExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckEmployeeIDIsExistsBySiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentCodeByEmployeeIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentCodeByEmployeeIDAndSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentDataByEmployeesIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeePictureByEmployeeIDAndSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeePictureObjectByEmployeeIDAndSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentDataByDepartmentCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentDataByDepartmentCodeAndSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentNameByDepartmentCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentNameByDepartmentCodeAndSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDepartmentCodeIsExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDepartmentCodeIsExistsBySiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorDataByCardNoAndSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorsDataByVendorsIDAndSiteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public OAService() {
            this.Url = global::MVC_PubReport.Properties.Settings.Default.MVC_PubReport_MISHR_WebService_OAService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckDomainUserLoginCompletedEventHandler CheckDomainUserLoginCompleted;
        
        /// <remarks/>
        public event CheckDomainUserNameLoginCompletedEventHandler CheckDomainUserNameLoginCompleted;
        
        /// <remarks/>
        public event GetEmployeesDataByEmployeesIDCompletedEventHandler GetEmployeesDataByEmployeesIDCompleted;
        
        /// <remarks/>
        public event GetEmployeesDataByEmployeesIDAndSiteCompletedEventHandler GetEmployeesDataByEmployeesIDAndSiteCompleted;
        
        /// <remarks/>
        public event GetEmployeeDataByEmployeeIDCompletedEventHandler GetEmployeeDataByEmployeeIDCompleted;
        
        /// <remarks/>
        public event GetEmployeeDataByEmployeeIDAndSiteCompletedEventHandler GetEmployeeDataByEmployeeIDAndSiteCompleted;
        
        /// <remarks/>
        public event GetEmployeeDataByCardNoAndSiteCompletedEventHandler GetEmployeeDataByCardNoAndSiteCompleted;
        
        /// <remarks/>
        public event GetChineseNameByEmployeeIDCompletedEventHandler GetChineseNameByEmployeeIDCompleted;
        
        /// <remarks/>
        public event GetChineseNameByEmployeeIDAndSiteCompletedEventHandler GetChineseNameByEmployeeIDAndSiteCompleted;
        
        /// <remarks/>
        public event CheckEmployeeIDIsExistsCompletedEventHandler CheckEmployeeIDIsExistsCompleted;
        
        /// <remarks/>
        public event CheckEmployeeIDIsExistsBySiteCompletedEventHandler CheckEmployeeIDIsExistsBySiteCompleted;
        
        /// <remarks/>
        public event GetDepartmentCodeByEmployeeIDCompletedEventHandler GetDepartmentCodeByEmployeeIDCompleted;
        
        /// <remarks/>
        public event GetDepartmentCodeByEmployeeIDAndSiteCompletedEventHandler GetDepartmentCodeByEmployeeIDAndSiteCompleted;
        
        /// <remarks/>
        public event GetDepartmentDataByEmployeesIdCompletedEventHandler GetDepartmentDataByEmployeesIdCompleted;
        
        /// <remarks/>
        public event GetEmployeePictureByEmployeeIDAndSiteCompletedEventHandler GetEmployeePictureByEmployeeIDAndSiteCompleted;
        
        /// <remarks/>
        public event GetEmployeePictureObjectByEmployeeIDAndSiteCompletedEventHandler GetEmployeePictureObjectByEmployeeIDAndSiteCompleted;
        
        /// <remarks/>
        public event GetDepartmentDataByDepartmentCodeCompletedEventHandler GetDepartmentDataByDepartmentCodeCompleted;
        
        /// <remarks/>
        public event GetDepartmentDataByDepartmentCodeAndSiteCompletedEventHandler GetDepartmentDataByDepartmentCodeAndSiteCompleted;
        
        /// <remarks/>
        public event GetDepartmentNameByDepartmentCodeCompletedEventHandler GetDepartmentNameByDepartmentCodeCompleted;
        
        /// <remarks/>
        public event GetDepartmentNameByDepartmentCodeAndSiteCompletedEventHandler GetDepartmentNameByDepartmentCodeAndSiteCompleted;
        
        /// <remarks/>
        public event CheckDepartmentCodeIsExistsCompletedEventHandler CheckDepartmentCodeIsExistsCompleted;
        
        /// <remarks/>
        public event CheckDepartmentCodeIsExistsBySiteCompletedEventHandler CheckDepartmentCodeIsExistsBySiteCompleted;
        
        /// <remarks/>
        public event GetVendorDataByCardNoAndSiteCompletedEventHandler GetVendorDataByCardNoAndSiteCompleted;
        
        /// <remarks/>
        public event GetVendorsDataByVendorsIDAndSiteCompletedEventHandler GetVendorsDataByVendorsIDAndSiteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckDomainUserLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckDomainUserLogin(string Domain, string UserName, string Password) {
            object[] results = this.Invoke("CheckDomainUserLogin", new object[] {
                        Domain,
                        UserName,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDomainUserLoginAsync(string Domain, string UserName, string Password) {
            this.CheckDomainUserLoginAsync(Domain, UserName, Password, null);
        }
        
        /// <remarks/>
        public void CheckDomainUserLoginAsync(string Domain, string UserName, string Password, object userState) {
            if ((this.CheckDomainUserLoginOperationCompleted == null)) {
                this.CheckDomainUserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDomainUserLoginOperationCompleted);
            }
            this.InvokeAsync("CheckDomainUserLogin", new object[] {
                        Domain,
                        UserName,
                        Password}, this.CheckDomainUserLoginOperationCompleted, userState);
        }
        
        private void OnCheckDomainUserLoginOperationCompleted(object arg) {
            if ((this.CheckDomainUserLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDomainUserLoginCompleted(this, new CheckDomainUserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckDomainUserNameLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckDomainUserNameLogin(string DomainUserName, string Password) {
            object[] results = this.Invoke("CheckDomainUserNameLogin", new object[] {
                        DomainUserName,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDomainUserNameLoginAsync(string DomainUserName, string Password) {
            this.CheckDomainUserNameLoginAsync(DomainUserName, Password, null);
        }
        
        /// <remarks/>
        public void CheckDomainUserNameLoginAsync(string DomainUserName, string Password, object userState) {
            if ((this.CheckDomainUserNameLoginOperationCompleted == null)) {
                this.CheckDomainUserNameLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDomainUserNameLoginOperationCompleted);
            }
            this.InvokeAsync("CheckDomainUserNameLogin", new object[] {
                        DomainUserName,
                        Password}, this.CheckDomainUserNameLoginOperationCompleted, userState);
        }
        
        private void OnCheckDomainUserNameLoginOperationCompleted(object arg) {
            if ((this.CheckDomainUserNameLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDomainUserNameLoginCompleted(this, new CheckDomainUserNameLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeesDataByEmployeesID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetEmployeesDataByEmployeesID(string[] EmployeesID, string WSKey) {
            object[] results = this.Invoke("GetEmployeesDataByEmployeesID", new object[] {
                        EmployeesID,
                        WSKey});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeesDataByEmployeesIDAsync(string[] EmployeesID, string WSKey) {
            this.GetEmployeesDataByEmployeesIDAsync(EmployeesID, WSKey, null);
        }
        
        /// <remarks/>
        public void GetEmployeesDataByEmployeesIDAsync(string[] EmployeesID, string WSKey, object userState) {
            if ((this.GetEmployeesDataByEmployeesIDOperationCompleted == null)) {
                this.GetEmployeesDataByEmployeesIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeesDataByEmployeesIDOperationCompleted);
            }
            this.InvokeAsync("GetEmployeesDataByEmployeesID", new object[] {
                        EmployeesID,
                        WSKey}, this.GetEmployeesDataByEmployeesIDOperationCompleted, userState);
        }
        
        private void OnGetEmployeesDataByEmployeesIDOperationCompleted(object arg) {
            if ((this.GetEmployeesDataByEmployeesIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeesDataByEmployeesIDCompleted(this, new GetEmployeesDataByEmployeesIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeesDataByEmployeesIDAndSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetEmployeesDataByEmployeesIDAndSite(string Site, string[] EmployeesID, string WSKey) {
            object[] results = this.Invoke("GetEmployeesDataByEmployeesIDAndSite", new object[] {
                        Site,
                        EmployeesID,
                        WSKey});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeesDataByEmployeesIDAndSiteAsync(string Site, string[] EmployeesID, string WSKey) {
            this.GetEmployeesDataByEmployeesIDAndSiteAsync(Site, EmployeesID, WSKey, null);
        }
        
        /// <remarks/>
        public void GetEmployeesDataByEmployeesIDAndSiteAsync(string Site, string[] EmployeesID, string WSKey, object userState) {
            if ((this.GetEmployeesDataByEmployeesIDAndSiteOperationCompleted == null)) {
                this.GetEmployeesDataByEmployeesIDAndSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeesDataByEmployeesIDAndSiteOperationCompleted);
            }
            this.InvokeAsync("GetEmployeesDataByEmployeesIDAndSite", new object[] {
                        Site,
                        EmployeesID,
                        WSKey}, this.GetEmployeesDataByEmployeesIDAndSiteOperationCompleted, userState);
        }
        
        private void OnGetEmployeesDataByEmployeesIDAndSiteOperationCompleted(object arg) {
            if ((this.GetEmployeesDataByEmployeesIDAndSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeesDataByEmployeesIDAndSiteCompleted(this, new GetEmployeesDataByEmployeesIDAndSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeDataByEmployeeID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetEmployeeDataByEmployeeID(string EmployeeID, string WSKey) {
            object[] results = this.Invoke("GetEmployeeDataByEmployeeID", new object[] {
                        EmployeeID,
                        WSKey});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeDataByEmployeeIDAsync(string EmployeeID, string WSKey) {
            this.GetEmployeeDataByEmployeeIDAsync(EmployeeID, WSKey, null);
        }
        
        /// <remarks/>
        public void GetEmployeeDataByEmployeeIDAsync(string EmployeeID, string WSKey, object userState) {
            if ((this.GetEmployeeDataByEmployeeIDOperationCompleted == null)) {
                this.GetEmployeeDataByEmployeeIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeDataByEmployeeIDOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeDataByEmployeeID", new object[] {
                        EmployeeID,
                        WSKey}, this.GetEmployeeDataByEmployeeIDOperationCompleted, userState);
        }
        
        private void OnGetEmployeeDataByEmployeeIDOperationCompleted(object arg) {
            if ((this.GetEmployeeDataByEmployeeIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeDataByEmployeeIDCompleted(this, new GetEmployeeDataByEmployeeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeDataByEmployeeIDAndSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetEmployeeDataByEmployeeIDAndSite(string Site, string EmployeeID, string WSKey) {
            object[] results = this.Invoke("GetEmployeeDataByEmployeeIDAndSite", new object[] {
                        Site,
                        EmployeeID,
                        WSKey});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeDataByEmployeeIDAndSiteAsync(string Site, string EmployeeID, string WSKey) {
            this.GetEmployeeDataByEmployeeIDAndSiteAsync(Site, EmployeeID, WSKey, null);
        }
        
        /// <remarks/>
        public void GetEmployeeDataByEmployeeIDAndSiteAsync(string Site, string EmployeeID, string WSKey, object userState) {
            if ((this.GetEmployeeDataByEmployeeIDAndSiteOperationCompleted == null)) {
                this.GetEmployeeDataByEmployeeIDAndSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeDataByEmployeeIDAndSiteOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeDataByEmployeeIDAndSite", new object[] {
                        Site,
                        EmployeeID,
                        WSKey}, this.GetEmployeeDataByEmployeeIDAndSiteOperationCompleted, userState);
        }
        
        private void OnGetEmployeeDataByEmployeeIDAndSiteOperationCompleted(object arg) {
            if ((this.GetEmployeeDataByEmployeeIDAndSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeDataByEmployeeIDAndSiteCompleted(this, new GetEmployeeDataByEmployeeIDAndSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeDataByCardNoAndSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetEmployeeDataByCardNoAndSite(string Site, string CardNo, string WSKey) {
            object[] results = this.Invoke("GetEmployeeDataByCardNoAndSite", new object[] {
                        Site,
                        CardNo,
                        WSKey});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeDataByCardNoAndSiteAsync(string Site, string CardNo, string WSKey) {
            this.GetEmployeeDataByCardNoAndSiteAsync(Site, CardNo, WSKey, null);
        }
        
        /// <remarks/>
        public void GetEmployeeDataByCardNoAndSiteAsync(string Site, string CardNo, string WSKey, object userState) {
            if ((this.GetEmployeeDataByCardNoAndSiteOperationCompleted == null)) {
                this.GetEmployeeDataByCardNoAndSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeDataByCardNoAndSiteOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeDataByCardNoAndSite", new object[] {
                        Site,
                        CardNo,
                        WSKey}, this.GetEmployeeDataByCardNoAndSiteOperationCompleted, userState);
        }
        
        private void OnGetEmployeeDataByCardNoAndSiteOperationCompleted(object arg) {
            if ((this.GetEmployeeDataByCardNoAndSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeDataByCardNoAndSiteCompleted(this, new GetEmployeeDataByCardNoAndSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChineseNameByEmployeeID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetChineseNameByEmployeeID(string EmployeeID) {
            object[] results = this.Invoke("GetChineseNameByEmployeeID", new object[] {
                        EmployeeID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetChineseNameByEmployeeIDAsync(string EmployeeID) {
            this.GetChineseNameByEmployeeIDAsync(EmployeeID, null);
        }
        
        /// <remarks/>
        public void GetChineseNameByEmployeeIDAsync(string EmployeeID, object userState) {
            if ((this.GetChineseNameByEmployeeIDOperationCompleted == null)) {
                this.GetChineseNameByEmployeeIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChineseNameByEmployeeIDOperationCompleted);
            }
            this.InvokeAsync("GetChineseNameByEmployeeID", new object[] {
                        EmployeeID}, this.GetChineseNameByEmployeeIDOperationCompleted, userState);
        }
        
        private void OnGetChineseNameByEmployeeIDOperationCompleted(object arg) {
            if ((this.GetChineseNameByEmployeeIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChineseNameByEmployeeIDCompleted(this, new GetChineseNameByEmployeeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChineseNameByEmployeeIDAndSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetChineseNameByEmployeeIDAndSite(string Site, string EmployeeID) {
            object[] results = this.Invoke("GetChineseNameByEmployeeIDAndSite", new object[] {
                        Site,
                        EmployeeID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetChineseNameByEmployeeIDAndSiteAsync(string Site, string EmployeeID) {
            this.GetChineseNameByEmployeeIDAndSiteAsync(Site, EmployeeID, null);
        }
        
        /// <remarks/>
        public void GetChineseNameByEmployeeIDAndSiteAsync(string Site, string EmployeeID, object userState) {
            if ((this.GetChineseNameByEmployeeIDAndSiteOperationCompleted == null)) {
                this.GetChineseNameByEmployeeIDAndSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChineseNameByEmployeeIDAndSiteOperationCompleted);
            }
            this.InvokeAsync("GetChineseNameByEmployeeIDAndSite", new object[] {
                        Site,
                        EmployeeID}, this.GetChineseNameByEmployeeIDAndSiteOperationCompleted, userState);
        }
        
        private void OnGetChineseNameByEmployeeIDAndSiteOperationCompleted(object arg) {
            if ((this.GetChineseNameByEmployeeIDAndSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChineseNameByEmployeeIDAndSiteCompleted(this, new GetChineseNameByEmployeeIDAndSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckEmployeeIDIsExists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckEmployeeIDIsExists(string EmployeeID) {
            object[] results = this.Invoke("CheckEmployeeIDIsExists", new object[] {
                        EmployeeID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckEmployeeIDIsExistsAsync(string EmployeeID) {
            this.CheckEmployeeIDIsExistsAsync(EmployeeID, null);
        }
        
        /// <remarks/>
        public void CheckEmployeeIDIsExistsAsync(string EmployeeID, object userState) {
            if ((this.CheckEmployeeIDIsExistsOperationCompleted == null)) {
                this.CheckEmployeeIDIsExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckEmployeeIDIsExistsOperationCompleted);
            }
            this.InvokeAsync("CheckEmployeeIDIsExists", new object[] {
                        EmployeeID}, this.CheckEmployeeIDIsExistsOperationCompleted, userState);
        }
        
        private void OnCheckEmployeeIDIsExistsOperationCompleted(object arg) {
            if ((this.CheckEmployeeIDIsExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckEmployeeIDIsExistsCompleted(this, new CheckEmployeeIDIsExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckEmployeeIDIsExistsBySite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckEmployeeIDIsExistsBySite(string Site, string EmployeeID) {
            object[] results = this.Invoke("CheckEmployeeIDIsExistsBySite", new object[] {
                        Site,
                        EmployeeID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckEmployeeIDIsExistsBySiteAsync(string Site, string EmployeeID) {
            this.CheckEmployeeIDIsExistsBySiteAsync(Site, EmployeeID, null);
        }
        
        /// <remarks/>
        public void CheckEmployeeIDIsExistsBySiteAsync(string Site, string EmployeeID, object userState) {
            if ((this.CheckEmployeeIDIsExistsBySiteOperationCompleted == null)) {
                this.CheckEmployeeIDIsExistsBySiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckEmployeeIDIsExistsBySiteOperationCompleted);
            }
            this.InvokeAsync("CheckEmployeeIDIsExistsBySite", new object[] {
                        Site,
                        EmployeeID}, this.CheckEmployeeIDIsExistsBySiteOperationCompleted, userState);
        }
        
        private void OnCheckEmployeeIDIsExistsBySiteOperationCompleted(object arg) {
            if ((this.CheckEmployeeIDIsExistsBySiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckEmployeeIDIsExistsBySiteCompleted(this, new CheckEmployeeIDIsExistsBySiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepartmentCodeByEmployeeID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepartmentCodeByEmployeeID(string EmployeeID) {
            object[] results = this.Invoke("GetDepartmentCodeByEmployeeID", new object[] {
                        EmployeeID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentCodeByEmployeeIDAsync(string EmployeeID) {
            this.GetDepartmentCodeByEmployeeIDAsync(EmployeeID, null);
        }
        
        /// <remarks/>
        public void GetDepartmentCodeByEmployeeIDAsync(string EmployeeID, object userState) {
            if ((this.GetDepartmentCodeByEmployeeIDOperationCompleted == null)) {
                this.GetDepartmentCodeByEmployeeIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentCodeByEmployeeIDOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentCodeByEmployeeID", new object[] {
                        EmployeeID}, this.GetDepartmentCodeByEmployeeIDOperationCompleted, userState);
        }
        
        private void OnGetDepartmentCodeByEmployeeIDOperationCompleted(object arg) {
            if ((this.GetDepartmentCodeByEmployeeIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentCodeByEmployeeIDCompleted(this, new GetDepartmentCodeByEmployeeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepartmentCodeByEmployeeIDAndSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepartmentCodeByEmployeeIDAndSite(string Site, string EmployeeID) {
            object[] results = this.Invoke("GetDepartmentCodeByEmployeeIDAndSite", new object[] {
                        Site,
                        EmployeeID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentCodeByEmployeeIDAndSiteAsync(string Site, string EmployeeID) {
            this.GetDepartmentCodeByEmployeeIDAndSiteAsync(Site, EmployeeID, null);
        }
        
        /// <remarks/>
        public void GetDepartmentCodeByEmployeeIDAndSiteAsync(string Site, string EmployeeID, object userState) {
            if ((this.GetDepartmentCodeByEmployeeIDAndSiteOperationCompleted == null)) {
                this.GetDepartmentCodeByEmployeeIDAndSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentCodeByEmployeeIDAndSiteOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentCodeByEmployeeIDAndSite", new object[] {
                        Site,
                        EmployeeID}, this.GetDepartmentCodeByEmployeeIDAndSiteOperationCompleted, userState);
        }
        
        private void OnGetDepartmentCodeByEmployeeIDAndSiteOperationCompleted(object arg) {
            if ((this.GetDepartmentCodeByEmployeeIDAndSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentCodeByEmployeeIDAndSiteCompleted(this, new GetDepartmentCodeByEmployeeIDAndSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepartmentDataByEmployeesId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDepartmentDataByEmployeesId(string Site, string[] EmployeesID) {
            object[] results = this.Invoke("GetDepartmentDataByEmployeesId", new object[] {
                        Site,
                        EmployeesID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentDataByEmployeesIdAsync(string Site, string[] EmployeesID) {
            this.GetDepartmentDataByEmployeesIdAsync(Site, EmployeesID, null);
        }
        
        /// <remarks/>
        public void GetDepartmentDataByEmployeesIdAsync(string Site, string[] EmployeesID, object userState) {
            if ((this.GetDepartmentDataByEmployeesIdOperationCompleted == null)) {
                this.GetDepartmentDataByEmployeesIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentDataByEmployeesIdOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentDataByEmployeesId", new object[] {
                        Site,
                        EmployeesID}, this.GetDepartmentDataByEmployeesIdOperationCompleted, userState);
        }
        
        private void OnGetDepartmentDataByEmployeesIdOperationCompleted(object arg) {
            if ((this.GetDepartmentDataByEmployeesIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentDataByEmployeesIdCompleted(this, new GetDepartmentDataByEmployeesIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeePictureByEmployeeIDAndSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEmployeePictureByEmployeeIDAndSite(string Site, string EmployeeID, string WSKey) {
            object[] results = this.Invoke("GetEmployeePictureByEmployeeIDAndSite", new object[] {
                        Site,
                        EmployeeID,
                        WSKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeePictureByEmployeeIDAndSiteAsync(string Site, string EmployeeID, string WSKey) {
            this.GetEmployeePictureByEmployeeIDAndSiteAsync(Site, EmployeeID, WSKey, null);
        }
        
        /// <remarks/>
        public void GetEmployeePictureByEmployeeIDAndSiteAsync(string Site, string EmployeeID, string WSKey, object userState) {
            if ((this.GetEmployeePictureByEmployeeIDAndSiteOperationCompleted == null)) {
                this.GetEmployeePictureByEmployeeIDAndSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeePictureByEmployeeIDAndSiteOperationCompleted);
            }
            this.InvokeAsync("GetEmployeePictureByEmployeeIDAndSite", new object[] {
                        Site,
                        EmployeeID,
                        WSKey}, this.GetEmployeePictureByEmployeeIDAndSiteOperationCompleted, userState);
        }
        
        private void OnGetEmployeePictureByEmployeeIDAndSiteOperationCompleted(object arg) {
            if ((this.GetEmployeePictureByEmployeeIDAndSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeePictureByEmployeeIDAndSiteCompleted(this, new GetEmployeePictureByEmployeeIDAndSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeePictureObjectByEmployeeIDAndSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object GetEmployeePictureObjectByEmployeeIDAndSite(string Site, string EmployeeID, string WSKey) {
            object[] results = this.Invoke("GetEmployeePictureObjectByEmployeeIDAndSite", new object[] {
                        Site,
                        EmployeeID,
                        WSKey});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeePictureObjectByEmployeeIDAndSiteAsync(string Site, string EmployeeID, string WSKey) {
            this.GetEmployeePictureObjectByEmployeeIDAndSiteAsync(Site, EmployeeID, WSKey, null);
        }
        
        /// <remarks/>
        public void GetEmployeePictureObjectByEmployeeIDAndSiteAsync(string Site, string EmployeeID, string WSKey, object userState) {
            if ((this.GetEmployeePictureObjectByEmployeeIDAndSiteOperationCompleted == null)) {
                this.GetEmployeePictureObjectByEmployeeIDAndSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeePictureObjectByEmployeeIDAndSiteOperationCompleted);
            }
            this.InvokeAsync("GetEmployeePictureObjectByEmployeeIDAndSite", new object[] {
                        Site,
                        EmployeeID,
                        WSKey}, this.GetEmployeePictureObjectByEmployeeIDAndSiteOperationCompleted, userState);
        }
        
        private void OnGetEmployeePictureObjectByEmployeeIDAndSiteOperationCompleted(object arg) {
            if ((this.GetEmployeePictureObjectByEmployeeIDAndSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeePictureObjectByEmployeeIDAndSiteCompleted(this, new GetEmployeePictureObjectByEmployeeIDAndSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepartmentDataByDepartmentCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDepartmentDataByDepartmentCode(string DepartmentCode) {
            object[] results = this.Invoke("GetDepartmentDataByDepartmentCode", new object[] {
                        DepartmentCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentDataByDepartmentCodeAsync(string DepartmentCode) {
            this.GetDepartmentDataByDepartmentCodeAsync(DepartmentCode, null);
        }
        
        /// <remarks/>
        public void GetDepartmentDataByDepartmentCodeAsync(string DepartmentCode, object userState) {
            if ((this.GetDepartmentDataByDepartmentCodeOperationCompleted == null)) {
                this.GetDepartmentDataByDepartmentCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentDataByDepartmentCodeOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentDataByDepartmentCode", new object[] {
                        DepartmentCode}, this.GetDepartmentDataByDepartmentCodeOperationCompleted, userState);
        }
        
        private void OnGetDepartmentDataByDepartmentCodeOperationCompleted(object arg) {
            if ((this.GetDepartmentDataByDepartmentCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentDataByDepartmentCodeCompleted(this, new GetDepartmentDataByDepartmentCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepartmentDataByDepartmentCodeAndSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDepartmentDataByDepartmentCodeAndSite(string Site, string DepartmentCode) {
            object[] results = this.Invoke("GetDepartmentDataByDepartmentCodeAndSite", new object[] {
                        Site,
                        DepartmentCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentDataByDepartmentCodeAndSiteAsync(string Site, string DepartmentCode) {
            this.GetDepartmentDataByDepartmentCodeAndSiteAsync(Site, DepartmentCode, null);
        }
        
        /// <remarks/>
        public void GetDepartmentDataByDepartmentCodeAndSiteAsync(string Site, string DepartmentCode, object userState) {
            if ((this.GetDepartmentDataByDepartmentCodeAndSiteOperationCompleted == null)) {
                this.GetDepartmentDataByDepartmentCodeAndSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentDataByDepartmentCodeAndSiteOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentDataByDepartmentCodeAndSite", new object[] {
                        Site,
                        DepartmentCode}, this.GetDepartmentDataByDepartmentCodeAndSiteOperationCompleted, userState);
        }
        
        private void OnGetDepartmentDataByDepartmentCodeAndSiteOperationCompleted(object arg) {
            if ((this.GetDepartmentDataByDepartmentCodeAndSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentDataByDepartmentCodeAndSiteCompleted(this, new GetDepartmentDataByDepartmentCodeAndSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepartmentNameByDepartmentCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepartmentNameByDepartmentCode(string DepartmentCode) {
            object[] results = this.Invoke("GetDepartmentNameByDepartmentCode", new object[] {
                        DepartmentCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentNameByDepartmentCodeAsync(string DepartmentCode) {
            this.GetDepartmentNameByDepartmentCodeAsync(DepartmentCode, null);
        }
        
        /// <remarks/>
        public void GetDepartmentNameByDepartmentCodeAsync(string DepartmentCode, object userState) {
            if ((this.GetDepartmentNameByDepartmentCodeOperationCompleted == null)) {
                this.GetDepartmentNameByDepartmentCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentNameByDepartmentCodeOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentNameByDepartmentCode", new object[] {
                        DepartmentCode}, this.GetDepartmentNameByDepartmentCodeOperationCompleted, userState);
        }
        
        private void OnGetDepartmentNameByDepartmentCodeOperationCompleted(object arg) {
            if ((this.GetDepartmentNameByDepartmentCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentNameByDepartmentCodeCompleted(this, new GetDepartmentNameByDepartmentCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepartmentNameByDepartmentCodeAndSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepartmentNameByDepartmentCodeAndSite(string Site, string DepartmentCode) {
            object[] results = this.Invoke("GetDepartmentNameByDepartmentCodeAndSite", new object[] {
                        Site,
                        DepartmentCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentNameByDepartmentCodeAndSiteAsync(string Site, string DepartmentCode) {
            this.GetDepartmentNameByDepartmentCodeAndSiteAsync(Site, DepartmentCode, null);
        }
        
        /// <remarks/>
        public void GetDepartmentNameByDepartmentCodeAndSiteAsync(string Site, string DepartmentCode, object userState) {
            if ((this.GetDepartmentNameByDepartmentCodeAndSiteOperationCompleted == null)) {
                this.GetDepartmentNameByDepartmentCodeAndSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentNameByDepartmentCodeAndSiteOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentNameByDepartmentCodeAndSite", new object[] {
                        Site,
                        DepartmentCode}, this.GetDepartmentNameByDepartmentCodeAndSiteOperationCompleted, userState);
        }
        
        private void OnGetDepartmentNameByDepartmentCodeAndSiteOperationCompleted(object arg) {
            if ((this.GetDepartmentNameByDepartmentCodeAndSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentNameByDepartmentCodeAndSiteCompleted(this, new GetDepartmentNameByDepartmentCodeAndSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckDepartmentCodeIsExists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckDepartmentCodeIsExists(string DepartmentCode) {
            object[] results = this.Invoke("CheckDepartmentCodeIsExists", new object[] {
                        DepartmentCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDepartmentCodeIsExistsAsync(string DepartmentCode) {
            this.CheckDepartmentCodeIsExistsAsync(DepartmentCode, null);
        }
        
        /// <remarks/>
        public void CheckDepartmentCodeIsExistsAsync(string DepartmentCode, object userState) {
            if ((this.CheckDepartmentCodeIsExistsOperationCompleted == null)) {
                this.CheckDepartmentCodeIsExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDepartmentCodeIsExistsOperationCompleted);
            }
            this.InvokeAsync("CheckDepartmentCodeIsExists", new object[] {
                        DepartmentCode}, this.CheckDepartmentCodeIsExistsOperationCompleted, userState);
        }
        
        private void OnCheckDepartmentCodeIsExistsOperationCompleted(object arg) {
            if ((this.CheckDepartmentCodeIsExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDepartmentCodeIsExistsCompleted(this, new CheckDepartmentCodeIsExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckDepartmentCodeIsExistsBySite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckDepartmentCodeIsExistsBySite(string Site, string DepartmentCode) {
            object[] results = this.Invoke("CheckDepartmentCodeIsExistsBySite", new object[] {
                        Site,
                        DepartmentCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDepartmentCodeIsExistsBySiteAsync(string Site, string DepartmentCode) {
            this.CheckDepartmentCodeIsExistsBySiteAsync(Site, DepartmentCode, null);
        }
        
        /// <remarks/>
        public void CheckDepartmentCodeIsExistsBySiteAsync(string Site, string DepartmentCode, object userState) {
            if ((this.CheckDepartmentCodeIsExistsBySiteOperationCompleted == null)) {
                this.CheckDepartmentCodeIsExistsBySiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDepartmentCodeIsExistsBySiteOperationCompleted);
            }
            this.InvokeAsync("CheckDepartmentCodeIsExistsBySite", new object[] {
                        Site,
                        DepartmentCode}, this.CheckDepartmentCodeIsExistsBySiteOperationCompleted, userState);
        }
        
        private void OnCheckDepartmentCodeIsExistsBySiteOperationCompleted(object arg) {
            if ((this.CheckDepartmentCodeIsExistsBySiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDepartmentCodeIsExistsBySiteCompleted(this, new CheckDepartmentCodeIsExistsBySiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVendorDataByCardNoAndSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetVendorDataByCardNoAndSite(string Site, string CardNo, string WSKey) {
            object[] results = this.Invoke("GetVendorDataByCardNoAndSite", new object[] {
                        Site,
                        CardNo,
                        WSKey});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorDataByCardNoAndSiteAsync(string Site, string CardNo, string WSKey) {
            this.GetVendorDataByCardNoAndSiteAsync(Site, CardNo, WSKey, null);
        }
        
        /// <remarks/>
        public void GetVendorDataByCardNoAndSiteAsync(string Site, string CardNo, string WSKey, object userState) {
            if ((this.GetVendorDataByCardNoAndSiteOperationCompleted == null)) {
                this.GetVendorDataByCardNoAndSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorDataByCardNoAndSiteOperationCompleted);
            }
            this.InvokeAsync("GetVendorDataByCardNoAndSite", new object[] {
                        Site,
                        CardNo,
                        WSKey}, this.GetVendorDataByCardNoAndSiteOperationCompleted, userState);
        }
        
        private void OnGetVendorDataByCardNoAndSiteOperationCompleted(object arg) {
            if ((this.GetVendorDataByCardNoAndSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorDataByCardNoAndSiteCompleted(this, new GetVendorDataByCardNoAndSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVendorsDataByVendorsIDAndSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetVendorsDataByVendorsIDAndSite(string Site, string[] VendorsID, string WSKey) {
            object[] results = this.Invoke("GetVendorsDataByVendorsIDAndSite", new object[] {
                        Site,
                        VendorsID,
                        WSKey});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorsDataByVendorsIDAndSiteAsync(string Site, string[] VendorsID, string WSKey) {
            this.GetVendorsDataByVendorsIDAndSiteAsync(Site, VendorsID, WSKey, null);
        }
        
        /// <remarks/>
        public void GetVendorsDataByVendorsIDAndSiteAsync(string Site, string[] VendorsID, string WSKey, object userState) {
            if ((this.GetVendorsDataByVendorsIDAndSiteOperationCompleted == null)) {
                this.GetVendorsDataByVendorsIDAndSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorsDataByVendorsIDAndSiteOperationCompleted);
            }
            this.InvokeAsync("GetVendorsDataByVendorsIDAndSite", new object[] {
                        Site,
                        VendorsID,
                        WSKey}, this.GetVendorsDataByVendorsIDAndSiteOperationCompleted, userState);
        }
        
        private void OnGetVendorsDataByVendorsIDAndSiteOperationCompleted(object arg) {
            if ((this.GetVendorsDataByVendorsIDAndSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorsDataByVendorsIDAndSiteCompleted(this, new GetVendorsDataByVendorsIDAndSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckDomainUserLoginCompletedEventHandler(object sender, CheckDomainUserLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDomainUserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDomainUserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckDomainUserNameLoginCompletedEventHandler(object sender, CheckDomainUserNameLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDomainUserNameLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDomainUserNameLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEmployeesDataByEmployeesIDCompletedEventHandler(object sender, GetEmployeesDataByEmployeesIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeesDataByEmployeesIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeesDataByEmployeesIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEmployeesDataByEmployeesIDAndSiteCompletedEventHandler(object sender, GetEmployeesDataByEmployeesIDAndSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeesDataByEmployeesIDAndSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeesDataByEmployeesIDAndSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEmployeeDataByEmployeeIDCompletedEventHandler(object sender, GetEmployeeDataByEmployeeIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeDataByEmployeeIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeDataByEmployeeIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEmployeeDataByEmployeeIDAndSiteCompletedEventHandler(object sender, GetEmployeeDataByEmployeeIDAndSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeDataByEmployeeIDAndSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeDataByEmployeeIDAndSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEmployeeDataByCardNoAndSiteCompletedEventHandler(object sender, GetEmployeeDataByCardNoAndSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeDataByCardNoAndSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeDataByCardNoAndSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetChineseNameByEmployeeIDCompletedEventHandler(object sender, GetChineseNameByEmployeeIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChineseNameByEmployeeIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChineseNameByEmployeeIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetChineseNameByEmployeeIDAndSiteCompletedEventHandler(object sender, GetChineseNameByEmployeeIDAndSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChineseNameByEmployeeIDAndSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChineseNameByEmployeeIDAndSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckEmployeeIDIsExistsCompletedEventHandler(object sender, CheckEmployeeIDIsExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckEmployeeIDIsExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckEmployeeIDIsExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckEmployeeIDIsExistsBySiteCompletedEventHandler(object sender, CheckEmployeeIDIsExistsBySiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckEmployeeIDIsExistsBySiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckEmployeeIDIsExistsBySiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDepartmentCodeByEmployeeIDCompletedEventHandler(object sender, GetDepartmentCodeByEmployeeIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentCodeByEmployeeIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentCodeByEmployeeIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDepartmentCodeByEmployeeIDAndSiteCompletedEventHandler(object sender, GetDepartmentCodeByEmployeeIDAndSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentCodeByEmployeeIDAndSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentCodeByEmployeeIDAndSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDepartmentDataByEmployeesIdCompletedEventHandler(object sender, GetDepartmentDataByEmployeesIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentDataByEmployeesIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentDataByEmployeesIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEmployeePictureByEmployeeIDAndSiteCompletedEventHandler(object sender, GetEmployeePictureByEmployeeIDAndSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeePictureByEmployeeIDAndSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeePictureByEmployeeIDAndSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEmployeePictureObjectByEmployeeIDAndSiteCompletedEventHandler(object sender, GetEmployeePictureObjectByEmployeeIDAndSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeePictureObjectByEmployeeIDAndSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeePictureObjectByEmployeeIDAndSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDepartmentDataByDepartmentCodeCompletedEventHandler(object sender, GetDepartmentDataByDepartmentCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentDataByDepartmentCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentDataByDepartmentCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDepartmentDataByDepartmentCodeAndSiteCompletedEventHandler(object sender, GetDepartmentDataByDepartmentCodeAndSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentDataByDepartmentCodeAndSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentDataByDepartmentCodeAndSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDepartmentNameByDepartmentCodeCompletedEventHandler(object sender, GetDepartmentNameByDepartmentCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentNameByDepartmentCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentNameByDepartmentCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDepartmentNameByDepartmentCodeAndSiteCompletedEventHandler(object sender, GetDepartmentNameByDepartmentCodeAndSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentNameByDepartmentCodeAndSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentNameByDepartmentCodeAndSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckDepartmentCodeIsExistsCompletedEventHandler(object sender, CheckDepartmentCodeIsExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDepartmentCodeIsExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDepartmentCodeIsExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckDepartmentCodeIsExistsBySiteCompletedEventHandler(object sender, CheckDepartmentCodeIsExistsBySiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDepartmentCodeIsExistsBySiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDepartmentCodeIsExistsBySiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetVendorDataByCardNoAndSiteCompletedEventHandler(object sender, GetVendorDataByCardNoAndSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorDataByCardNoAndSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorDataByCardNoAndSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetVendorsDataByVendorsIDAndSiteCompletedEventHandler(object sender, GetVendorsDataByVendorsIDAndSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorsDataByVendorsIDAndSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorsDataByVendorsIDAndSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591